const canvas = document.getElementById("computerCanvas"); 
const ctx = canvas.getContext("2d"); 

// Переменные для управления состояниями анимации
let angle = 0; // Используется для анимации загрузки (угол вращения)
let isLoading = true; // Флаг, указывающий на то, что компьютер находится в состоянии загрузки
let isTurnedOn = false; // Флаг, указывающий на то, что компьютер "включен"
let screenBrightness = 0; // Управляет яркостью экрана для анимации включения
const loadingTime = 5000; // Время (5 секунд) до завершения загрузки

// Функция для отрисовки компьютера (монитор, подставка, клавиатура, мышка и экран)
function drawComputer() {
    // Рисуем монитор
    ctx.fillStyle = "#333"; // Цвет монитора (тёмно-серый)
    ctx.fillRect(150, 50, 300, 200); // Прямоугольник монитора: (150, 50) — координаты, 300 — ширина, 200 — высота
    ctx.fillStyle = `rgba(${screenBrightness}, ${screenBrightness}, ${screenBrightness}, 1)`; // Цвет экрана, изменяющийся с яркостью (изначально чёрный)
    ctx.fillRect(170, 70, 260, 160); // Прямоугольник экрана: (170, 70) — координаты, 260 — ширина, 160 — высота

    // Рисуем подставку монитора
    ctx.fillStyle = "#666"; // Цвет подставки (светло-серый)
    ctx.fillRect(260, 250, 80, 10); // Ножка подставки: (260, 250) — координаты, 80 — ширина, 10 — высота
    ctx.fillRect(240, 260, 120, 20); // Основание подставки: (240, 260) — координаты, 120 — ширина, 20 — высота

    // Рисуем клавиатуру
    ctx.fillStyle = "#333"; // Цвет клавиатуры (тёмно-серый)
    ctx.fillRect(150, 290, 300, 30); // Прямоугольник клавиатуры: (150, 290) — координаты, 300 — ширина, 30 — высота

    // Рисуем мышку
    ctx.beginPath(); // Начинаем новый путь для рисования формы
    ctx.fillStyle = "#333"; // Цвет мышки (тёмно-серый)
    ctx.arc(470, 310, 15, 0, Math.PI * 2); // Рисуем круг мышки: (470, 310) — центр круга, 15 — радиус, полный круг
    ctx.fill(); // Заполняем мышку цветом
    ctx.strokeStyle = "#000"; // Цвет обводки (чёрный)
    ctx.stroke(); // Наносим обводку

    // Анимация загрузки или экран включения
    if (isLoading) {
        drawLoadingAnimation(); // Если идёт загрузка, запускаем анимацию загрузки
    } else if (isTurnedOn) {
        increaseBrightness(); // Если компьютер "включен", увеличиваем яркость экрана
    }
}

// Функция для анимации загрузки на экране
function drawLoadingAnimation() {
    ctx.save(); // Сохраняем текущее состояние контекста
    ctx.translate(300, 150); // Перемещаем центр координат в точку (300, 150) — центр экрана
    ctx.rotate(angle); // Поворачиваем круг на угол, определённый переменной angle
    ctx.strokeStyle = "#00ff00"; // Цвет обводки (зелёный)
    ctx.lineWidth = 5; // Толщина обводки — 5 пикселей
    ctx.beginPath(); // Начинаем новый путь для рисования формы
    ctx.arc(0, 0, 40, 0, Math.PI * 1.5); // Рисуем дугу: (0, 0) — центр, 40 — радиус, от 0 до Math.PI * 1.5 — 3/4 круга
    ctx.stroke(); // Применяем обводку
    ctx.restore(); // Восстанавливаем сохранённое состояние контекста
    angle += 0.05; // Увеличиваем угол для следующего кадра, чтобы круг вращался
}

// Функция для увеличения яркости экрана при включении
function increaseBrightness() {
    if (screenBrightness < 255) { // Если яркость экрана меньше 255 (максимальная яркость)
        screenBrightness += 5; // Увеличиваем яркость экрана на 5
    }
    ctx.fillStyle = "#00ff00"; // Цвет текста (зелёный)
    ctx.font = "24px Arial"; // Шрифт для текста
    ctx.fillText("HELLO:)", 250, 150); // Рисуем текст "HELLO:)" на экране, координаты (250, 150)
}

// Завершаем загрузку через 5 секунд
setTimeout(() => {
    isLoading = false; // Загрузка завершена
    isTurnedOn = true; // Компьютер "включен"
}, loadingTime); // Проходит 5000 миллисекунд (5 секунд)

// Функция для анимации
function animate() {
    ctx.clearRect(0, 0, canvas.width, canvas.height); // Очищаем весь холст перед каждым кадром анимации
    drawComputer(); // Рисуем компьютер в текущем состоянии
    requestAnimationFrame(animate); // Запрашиваем следующий кадр анимации
}

animate();